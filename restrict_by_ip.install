<?php

/**
* Implementation of hook_schema().
*/
function restrict_by_ip_schema() {
  $schema['restrict_by_ip'] = array(
    'description' => t('The Restrict By IP Table'),
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'restrict_by_ip_address' => array(
        'type'  => 'varchar',
        'length' => 256,
      ),
    ),
    'primary key' => array('uid'),
  );
  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function restrict_by_ip_update_last_removed() {
  return 7301;
}

/**
 * Move book settings from variables to config.
 */
function restrict_by_ip_update_1000() {
  // Migrate variables to config.
  $config = config('book.settings');
  $config->set('error_page', update_variable_get('restrict_by_ip_error_page', ''));
  $config->set('login_range', update_variable_get('restrict_by_ip_login_range', ''));

  $user_roles = user_roles(TRUE); // Get all roles except anonymous.
  unset($user_roles['authenticated']);

  foreach ($user_roles as $rid => $label) {
    $md5_label = md5($label);
    $config->set('roles.' . $rid, update_variable_get('restrict_by_ip_role_' . $md5_label, ''));
    update_variable_del('restrict_by_ip_role_' . $md5_label);
  }
  $config->save();

  // Delete variables.
  update_variable_del('restrict_by_ip_error_page');
  update_variable_del('restrict_by_ip_login_range');
}
